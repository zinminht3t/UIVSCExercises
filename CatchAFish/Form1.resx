<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aga8Yxb9dwGnoAmyOXhHdQq37ensf//Z
</value>
  </data>
</root>